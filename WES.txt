

sample=$1

# make simbolic link in pwd
ln -s /BiO/data/raw_data/${sample}_1.fastq.gz
ln -s /BiO/data/raw_data/${sample}_2.fastq.gz

# Do trimming (using sickle)
/BiO/apps/sickle/sickle pe -t sanger -g -f ${sample}_1.fastq.gz -r ${sample}_2.fastq.gz -o ${sample}-trimmed_1.fastq.gz -p ${sample}-trimmed_2.fastq.gz -s ${sample}-tri
mmed_3.fastq.gz

# if you want see boxplot, 
/BiO/Install/FastQC_0.10.1/ fastqc -t 4 â€“nogroup ${sample}-trimmed_1.fastq.gz

# Alignment & mapping & sorting (using bwa, samtools)
/BiO/apps/bwa-0.7.17/bwa mem -t 2 -M -R "@RG\tID:BioEdu\tSM:${sample}\tPL:illumina\tLB:WES" /BiO/data/reference/hg19_partial.fasta ${sample}-trimmed_1.fastq.gz ${sample}-trimmed_2.fastq.gz | /BiO/apps/samtools/samtools view -bS -q 20 - | /BiO/apps/samtools/samtools sort -m 4000000000 -o ${sample}.sorted.bam

# if you want to read bam file, and read CIGARstring,
 /BiO/apps/samtools/samtools view -h ${sample}.sorted.bam | less

# Remove Duplicate (using GATK)
java -Xmx4g -jar /BiO/apps/gatk-4.1.2.0/gatk-package-4.1.2.0-local.jar MarkDuplicates -I ${sample}.sorted.bam -O ${sample}.rmdup.bam -M ${sample}.rmdup.metrics --REMOVE_DUPLICATES=true

# Indexing rmdup.file
/BiO/apps/samtools/samtools index ${sample}.rmdup.bam

# BQSR (Base Quality Score Recalibration) (using GATK)
java -Xmx4g -jar /BiO/apps/gatk-4.1.2.0/gatk-package-4.1.2.0-local.jar BaseRecalibrator -R /BiO/data/reference/hg19.fasta -I ${sample}.rmdup.bam -L /BiO/data/target/target.bed --known-sites /BiO/data/DB/dbSnp151_chr.vcf.gz --known-sites /BiO/data/DB/Mills_and_1000G_gold_standard.indels.hg19.vcf.gz -O ${sample}-recal_data.table

# apply BQSR (using GATK)
java -Xmx4g -jar /BiO/apps/gatk-4.1.2.0/gatk-package-4.1.2.0-local.jar ApplyBQSR -bqsr ${sample}-recal_data.table -I ${sample}.rmdup.bam -O ${sample}.recal.bam

# Of course, U hav to indexing!!!!!
 /BiO/apps/samtools/samtools index ${sample}.recal.bam

# On-target coverage (using GATK3)
/BiO/apps/GenomeAnalysisTK-3.5/GenomeAnalysisTK.jar -T DepthOfCoverage -R /BiO/data/reference/hg19.fasta -I ${sample}.recal.bam -o ${sample}_target_cov -ct 1 -ct 5 -ct 10 -ct 20 -ct 30 -omitBaseOutput -L /BiO/data/target/target.bed

# remove off-target reads
bedtools intersect -wa -a ${sample}.recal.bam -b /BiO/data/target/target.bed > ${sample}.target.bam

# Indexing!!
/BiO/apps/samtools/samtools index ${sample}.target.bam

# check reads count flow. (In this case, rmdup was counted) 
/BiO/apps/samtools/samtools idxstats ${sample}.rmdup.bam | awk '{sum+=$3}END{print sum}'

# Variant calling (using GATK)
java -Xmx4g -jar /BiO/apps/gatk-4.1.2.0/gatk-package-4.1.2.0-loc
al.jar HaplotypeCaller -R /BiO/data/reference/hg19.fasta -I ${sample}.target.bam -O ${sample}.gatk.vcf

# doing bgzip,, and then using tabix for indexing
bgzip ${sample}.gatk.vcf | tabix -p vcf ${sample}.gatk.vcf.gz

# Variant calling (using bcftools)
/BiO/apps/bcftools/bcftools mpileup -f /BiO/data/reference/hg19.fasta ${sample}.target.bam | /BiO/apps/bcftools/bcftools call -mv -Ov -o ${sample}.samt.vcf

# bgzip, and Indexing
bgzip ${sample}.samt.vcf
tabix -p vcf ${sample}.samt.vcf.gz

# consensus VCF which means call same data in targeted files
vcf-isec -o -n +2 ${sample}.gatk.vcf.gz ${sample}.samt.vcf.gz > ${sample}.consensus.vcf

# filteration with 'DP <10 or FS > 60.0' write with 'LOWQUAL'
java -jar /BiO/apps/gatk-4.1.2.0/gatk-package-4.1.2.0-local.jar VariantFiltration -R /BiO/data/reference/hg19.fasta -O ${sample}.consensus.filt.vcf --variant ${sample}.consensus.vcf --filter-expression 'DP < 10 || FS > 60.0' --filter-name 'LOWQUAL'

# except LOWQUAL data save in final.file and dgzip
 cat ${sample}.consensus.filt.vcf | awk -F '\t' '($7!="LOWQUAL") {print}' | bgzip > ${sample}.final.vcf.gz

# indexing
tabix -p vcf ${sample}.final.vcf.gz


